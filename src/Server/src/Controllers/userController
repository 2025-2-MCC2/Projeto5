import { pool } from "../db.js";

// Listar usuários
export async function getUsers() {
  try {
    const res = await pool.query("SELECT * FROM Usuario");
    return { users: res.rows, status_code: 200 };
  } catch (err) {
    console.log(err);
    return { error: "Erro ao listar usuários", status_code: 500 };
  }
}

// Logar usuário
export async function loginUser(data) {
  const { email, senha, role } = data;

  try {
    const res = await pool.query(
      "SELECT * FROM Usuario WHERE email_usuario = $1 AND senha_usuario = $2",
      [email, senha]
    );

    if (res.rows.length < 1) {
      return { error: "Usuário ou senha incorretos", status_code: 401 };
    }

    const res2 = await pool.query(
      "SELECT * FROM Usuario WHERE ID_Usuario = $1",
      [res.rows[0].id_usuario]
    );

    if (role === res2.rows[0].tipo_usuario) {
      return { user: res.rows, status_code: 200 };
    } else {
      return { error: "Cargo incorreto", status_code: 401 };
    }
  } catch (err) {
    console.log(err);
    return { error: "Erro ao logar usuário", status_code: 500 };
  }
}

// Cadastrar usuário
export async function registerUser(data) {
  const { nome, email, senha, tipo_usuario } = data;

  if (
    !nome ||
    nome.length > 60 ||
    !email ||
    email.length > 100 ||
    !senha ||
    senha.length > 200 ||
    !tipo_usuario
  ) {
    return {
      error:
        "Preencha todos os campos (nome, email, senha, tipo_usuario) corretamente",
      status_code: 400,
    };
  }

  if (!["Administrador", "Mentor", "Aluno"].includes(tipo_usuario)) {
    return {
      error: "O tipo de usuário deve ser Administrador, Mentor ou Aluno",
      status_code: 400,
    };
  }

  try {
    const res = await pool.query(
      "INSERT INTO Usuario (nome_usuario, email_usuario, senha_usuario, tipo_usuario) VALUES ($1, $2, $3, $4) RETURNING *",
      [nome, email, senha, tipo_usuario]
    );

    return { user: res.rows[0], status_code: 201 };
  } catch (err) {
    console.log(err);
    return { error: "Erro ao cadastrar usuário", status_code: 500 };
  }
}

// Deletar usuário
export async function deleteUser(id) {
  try {
    const checkUser = await pool.query(
      "SELECT * FROM Usuario WHERE ID_Usuario = $1",
      [id]
    );
    if (checkUser.rows.length < 1) {
      return { error: "Usuário não encontrado", status_code: 404 };
    }

    await pool.query("DELETE FROM Usuario WHERE ID_Usuario = $1", [id]);
    return { message: "Usuário deletado com sucesso", status_code: 200 };
  } catch (err) {
    console.log(err);
    return { error: "Erro ao deletar usuário", status_code: 500 };
  }
}

// Atualizar usuário
export async function updateUser(data) {
  const { id, nome, email, senha, tipo_usuario } = data;

  try {
    const checkUser = await pool.query(
      "SELECT * FROM Usuario WHERE ID_Usuario = $1",
      [id]
    );
    if (checkUser.rows.length < 1) {
      return { error: "Usuário não encontrado", status_code: 404 };
    }

    await pool.query(
      "UPDATE Usuario SET nome_usuario = $1, email_usuario = $2, senha_usuario = $3, tipo_usuario = $4 WHERE ID_Usuario = $5",
      [nome, email, senha, tipo_usuario, id]
    );

    return { message: "Usuário atualizado com sucesso", status_code: 200 };
  } catch (err) {
    console.log(err);
    return { error: "Erro ao atualizar usuário", status_code: 500 };
  }
}
